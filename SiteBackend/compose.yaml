name: PROD_SiteStack
services:
  zacharymunshaw-dev:
    image: site-backend
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SE_DB_HOST: ${SE_DB_HOST}
      SE_DB_PORT: ${SE_DB_PORT}
      SE_DB_NAME: ${SE_DB_NAME}
      SE_DB_USER: ${SE_DB_USER}
      SE_DB_PASS: ${SE_DB_PASS}
    volumes:
      - ./Data/SeedData:/app/data
    ports:
      - ${BE_PORT1}:${BE_PORT1}
      - ${BE_PORT2}:${BE_PORT2}
    networks:
      - zm-prod-tunnel-net
      - zm-prod-db-net
      - zm-prod-cache-net
  
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: always
    entrypoint: cloudflared
    command:
      - tunnel
      - --no-autoupdate
      - run
      - --token
      - ${CLOUDFLARED_TOKEN}
    networks:
      - zm-prod-tunnel-net
  ## Databases
  site-db:
    image: postgres:latest
    container_name: site-db
    restart: always
    command: -p ${SITE_PORT}
    ports:
      - ${SITE_PORT}:${SITE_PORT}
    environment:
      POSTGRES_DB: ${SITE_DB_NAME}
      POSTGRES_USER: ${SITE_DB_USER}
      POSTGRES_PASSWORD: ${SITE_DB_PASS}
    volumes:
      - site_db:/var/lib/postgresql/data
    networks:
      - db-net
  se-db:
    image: pgvector/pgvector:pg16
    container_name: se-db
    restart: always
    command: -p ${SE_PORT}
    ports:
      - ${SE_PORT}:${SE_PORT}
    environment:
      POSTGRES_DB: ${SE_DB_NAME}
      POSTGRES_USER: ${SE_DB_USER}
      POSTGRES_PASSWORD: ${SE_DB_PASS}
    volumes:
      - se_db:/var/lib/postgresql/data
    networks:
      - db-net
  site-cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command:
      - redis-server --save 20 1 --loglevel warning --requirepass ${CACHE_PASS}
    volumes:
      - PROD_cache:/data

networks:
  zm-prod-tunnel-net:
    driver: bridge
  zm-prod-db-net:
    driver: bridge
  zm-prod-cache-net:
    driver: bridge

volumes:
  PROD_ai-data:
  PROD_site-db:
  PROD_se-db:
  PROD_cache: