name: PROD_SiteStack
services:
  zacharymunshaw-dev:
    image: site-backend
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SE_DB_CONN: Host="${SE_PROD_DB_HOST}";Port="${SE_PROD_DB_PORT}";Database="${SE_PROD_DB_NAME}";Username="${SE_PROD_DB_USER}";Password="${SE_PROD_DB_PASS}"
      ASPNETCORE_ENVIRONMENT: Production
    volumes:
      - ./Data/SeedData:/app/data
    ports:
      - ${BE_PORT1}:${BE_PORT1}
      - ${BE_PORT2}:${BE_PORT2}
    networks:
      - zm-prod-tunnel-net
      - zm-prod-db-net
      - zm-prod-cache-net
  
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: always
    entrypoint: cloudflared
    command:
      - tunnel
      - --no-autoupdate
      - run
      - --token
      - ${CLOUDFLARED_PROD_TOKEN}
    networks:
      - zm-prod-tunnel-net
  ## Databases
  site-db:
    image: postgres:latest
    container_name: site-db
    restart: always
    command: -p ${SITE_PROD_DB_PORT}
    ports:
      - ${SITE_PROD_DB_PORT}:${SITE_PROD_DB_PORT}
    environment:
      POSTGRES_DB: ${SITE_PROD_DB_NAME}
      POSTGRES_USER: ${SITE_PROD_DB_USER}
      POSTGRES_PASSWORD: ${SITE_PROD_DB_PASS}
    volumes:
      - PROD-site-db:/var/lib/postgresql/data
    networks:
      - zm-prod-db-net
  se-db:
    image: pgvector/pgvector:pg16
    container_name: se-db
    restart: always
    command: -p ${SE_PROD_DB_PORT}
    ports:
      - ${SE_PROD_DB_PORT}:${SE_PROD_DB_PORT}
    environment:
      POSTGRES_DB: ${SE_PROD_DB_NAME}
      POSTGRES_USER: ${SE_PROD_DB_USER}
      POSTGRES_PASSWORD: ${SE_PROD_DB_PASS}
    volumes:
      - PROD-se-db:/var/lib/postgresql/data
    networks:
      - zm-prod-db-net

networks:
  zm-prod-tunnel-net:
    driver: bridge
  zm-prod-db-net:
    driver: bridge
  zm-prod-cache-net:
    driver: bridge

volumes:
  PROD-site-db:
  PROD-se-db:
  PROD-cache: